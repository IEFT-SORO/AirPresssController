C51 COMPILER V9.01   ADC                                                                   04/30/2021 15:09:25 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE ADC
OBJECT MODULE PLACED IN .\Objects\ADC.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE ..\BSP\BSP_ADC\ADC.C LARGE WARNINGLEVEL(1) OPTIMIZE(8,SPEED) BROWSE INCD
                    -IR(..\USER;..\SYS;..\BSP\BSP_485;..\BSP\BSP_ADC;..\BSP\BSP_KEY;..\BSP\BSP_OLED_IIC;..\APP;..\BSP\BSP_IO) DEBUG OBJECTEXT
                    -END PRINT(.\Listings\ADC.lst) TABS(2) OBJECT(.\Objects\ADC.obj)

line level    source

   1          
   2          /********************************** (C) COPYRIGHT *******************************
   3          * File Name          : ADC.C
   4          * Author             : WCH
   5          * Version            : V1.0
   6          * Date               : 2019/07/22
   7          * Description        : CH554 ADC²ÉÑùÊ±ÖÓÉèÖÃ£¬ADCÍ¨µÀÉèÖÃº¯Êý£¬µçÑ¹±È½ÏÄ£Ê½ÉèÖÃ 
   8          *******************************************************************************/
   9          
  10          #include "CH551.H"                                                          
  11          #include "Debug.H"
  12          #include "ADC.H"
  13          
  14          #pragma  NOAREGS
  15          
  16          #define ADC_INTERRUPT  1
  17          UINT16 AdcData;
  18          sbit press_adcpin=P3^2;
  19          /*******************************************************************************
  20          * Function Name  : ADCInit(UINT8 div)
  21          * Description    : ADC²ÉÑùÊ±ÖÓÉèÖÃ,Ä£¿é¿ªÆô£¬ÖÐ¶Ï¿ªÆô
  22          * Input          : UINT8 div Ê±ÖÓÉèÖÃ 
  23                             1 Âý  384¸öFosc                                  
  24                             0 ¿ì  96¸öFosc                  
  25          * Output         : None
  26          * Return         : None
  27          *******************************************************************************/
  28          void ADCInit(UINT8 div)
  29          {
  30   1          Port3Cfg(0,2);//P3^2
  31   1          ADC_CFG &= ~bADC_CLK | div;
  32   1          ADC_CFG |= bADC_EN;                                                        //ADCµçÔ´Ê¹ÄÜ
  33   1      #if ADC_INTERRUPT
  34   1          ADC_IF = 0;                                                                //Çå¿ÕÖÐ¶Ï
  35   1          IE_ADC = 1;                                                                //Ê¹ÄÜADCÖÐ¶Ï
  36   1      #endif
  37   1      }
  38          
  39          /*******************************************************************************
  40          * Function Name  : ADC_ChannelSelect(UINT8 ch)
  41          * Description    : ADC²ÉÑùÆôÓÃ
  42          * Input          : UINT8 ch ²ÉÓÃÍ¨µÀ
  43          * Output         : None
  44          * Return         : ³É¹¦ SUCCESS
  45                             Ê§°Ü FAIL
  46          *******************************************************************************/
  47          UINT8 ADC_ChannelSelect(UINT8 ch)
  48          {
  49   1          if(ch == 0){ADC_CHAN1 =0;ADC_CHAN0=0;P1_DIR_PU &= ~bAIN0;}                 //AIN0
  50   1          else if(ch == 1){ADC_CHAN1 =0;ADC_CHAN0=1;P1_DIR_PU &= ~bAIN1;}            //AIN1
  51   1          else if(ch == 2){ADC_CHAN1 =1;ADC_CHAN0=0;P1_DIR_PU &= ~bAIN2;}            //AIN2
  52   1          else if(ch == 3){ADC_CHAN1 =1;ADC_CHAN0=1;P3_DIR_PU &= ~bAIN3;}            //AIN3
  53   1          else return FAIL;
C51 COMPILER V9.01   ADC                                                                   04/30/2021 15:09:25 PAGE 2   

  54   1          return SUCCESS;
  55   1      }
  56          
  57          /*******************************************************************************
  58          * Function Name  : VoltageCMPModeInit()
  59          * Description    : µçÑ¹±È½ÏÆ÷Ä£Ê½³õÊ¼»¯
  60          * Input          : UINT8 fo ÕýÏò¶Ë¿Ú 0\1\2\3
  61                             UINT8 re ·´Ïò¶Ë¿Ú 1\3
  62          * Output         : None
  63          * Return         : ³É¹¦ SUCCESS
  64                             Ê§°Ü FAIL
  65          *******************************************************************************/
  66          UINT8 VoltageCMPModeInit(UINT8 fo,UINT8 re)
  67          {
  68   1          ADC_CFG |= bCMP_EN;                                                        //µçÆ½±È½ÏµçÔ´Ê¹ÄÜ
  69   1          if(re == 1){
  70   2            if(fo == 0) {ADC_CHAN1 =0;ADC_CHAN0=0;CMP_CHAN =0;}                      //AIN0ºÍAIN1
  71   2            else if(fo == 2) {ADC_CHAN1 =1;ADC_CHAN0=0;CMP_CHAN =0;}                 //AIN2ºÍAIN1
  72   2            else if(fo == 3) {ADC_CHAN1 =1;ADC_CHAN0=1;CMP_CHAN =0; }                //AIN3ºÍAIN1     
  73   2            else return FAIL;
  74   2          }          
  75   1          else if(re == 3){
  76   2            if(fo == 0) {ADC_CHAN1 =0;ADC_CHAN0=0;CMP_CHAN =0;}                      //AIN0ºÍAIN1
  77   2            else if(fo == 1) {ADC_CHAN1 =0;ADC_CHAN0=1;CMP_CHAN =0;}                 //AIN1ºÍAIN1
  78   2            else if(fo == 2) {ADC_CHAN1 =1;ADC_CHAN0=0;CMP_CHAN =0;}                 //AIN2ºÍAIN1     
  79   2            else return FAIL;
  80   2          }
  81   1          else return FAIL;
  82   1      #if ADC_INTERRUPT
  83   1          CMP_IF = 0;                                                                //Çå¿ÕÖÐ¶Ï
  84   1          IE_ADC = 1;                                                                //Ê¹ÄÜADCÖÐ¶Ï
  85   1      #endif
  86   1      
  87   1           return SUCCESS;
  88   1      }
  89          
  90          #if ADC_INTERRUPT
  91          /*******************************************************************************
  92          * Function Name  : ADCInterrupt(void)
  93          * Description    : ADC ÖÐ¶Ï·þÎñ³ÌÐò
  94          *******************************************************************************/
  95          void  ADCInterrupt( void ) interrupt INT_NO_ADC using 1                       //ADCÖÐ¶Ï·þÎñ³ÌÐò,Ê¹ÓÃ¼Ä´æÆ÷×
             -é1
  96          { 
  97   1          if(ADC_IF ==  1)                                                          //ADCÍê³ÉÖÐ¶Ï
  98   1          { 
  99   2            AdcData = ADC_DATA;                                                    //È¡×ßADC²ÉÑùÊý¾Ý
 100   2            ADC_IF = 0;                                                             //Çå¿ÕADCÖÐ¶Ï±êÖ¾
 101   2      //    printf(" %d ",UserData);
 102   2          }
 103   1          if(CMP_IF ==  1)                                                          //µçÑ¹±È½ÏÍê³ÉÖÐ¶Ï
 104   1          { 
 105   2      //       UserData = ADC_CTRL&0x80 >> 7);                                          //±£´æ±È½ÏÆ÷½á¹û    
 106   2            CMP_IF = 0;                                                             //Çå¿Õ±È½ÏÆ÷Íê³ÉÖÐ¶Ï
 107   2          }
 108   1      }
 109          #endif
 110          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    204    ----
C51 COMPILER V9.01   ADC                                                                   04/30/2021 15:09:25 PAGE 3   

   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      2       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
