C51 COMPILER V9.01   ADC                                                                   05/11/2021 15:11:42 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE ADC
OBJECT MODULE PLACED IN .\Objects\ADC.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE ..\BSP\BSP_ADC\ADC.C LARGE WARNINGLEVEL(1) OPTIMIZE(8,SPEED) BROWSE INCD
                    -IR(..\USER;..\SYS;..\BSP\BSP_485;..\BSP\BSP_ADC;..\BSP\BSP_KEY;..\BSP\BSP_OLED_IIC;..\APP;..\BSP\BSP_IO) DEBUG OBJECTEXT
                    -END PRINT(.\Listings\ADC.lst) TABS(2) OBJECT(.\Objects\ADC.obj)

line level    source

   1          
   2          /********************************** (C) COPYRIGHT *******************************
   3          * File Name          : ADC.C
   4          * Author             : WCH
   5          * Version            : V1.0
   6          * Date               : 2019/07/22
   7          * Description        : CH554 ADCï¿½ï¿½ï¿½ï¿½Ê±ï¿½ï¿½ï¿½ï¿½ï¿½Ã£ï¿½ADCÍ¨ï¿½ï¿½ï¿½ï¿½ï¿½Ãºï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
             -ï¿½Ñ¹ï¿½È½ï¿½Ä£Ê½ï¿½ï¿½ï¿½ï¿½ 
   8          *******************************************************************************/
   9          
  10          #include "CH551.H"                                                          
  11          #include "Debug.H"
  12          #include "ADC.H"
  13          
  14          #pragma  NOAREGS
  15          
  16          #define ADC_INTERRUPT  1
  17          UINT16 AdcData;
  18          sbit press_adcpin=P3^2;
  19          /*******************************************************************************
  20          * Function Name  : ADCInit(UINT8 div)
  21          * Description    : ADCï¿½ï¿½ï¿½ï¿½Ê±ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½,Ä£ï¿½é¿ªï¿½ï¿½ï¿½ï¿½ï¿½Ð¶Ï¿ï¿½ï¿½ï¿½
  22          * Input          : UINT8 div Ê±ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ 
  23                             1 ï¿½ï¿½  384ï¿½ï¿½Fosc                                  
  24                             0 ï¿½ï¿½  96ï¿½ï¿½Fosc                  
  25          * Output         : None
  26          * Return         : None
  27          *******************************************************************************/
  28          void ADCInit(UINT8 div)
  29          {
  30   1          Port3Cfg(0,2);//P3^2
  31   1          ADC_CFG &= ~bADC_CLK | div;
  32   1          ADC_CFG |= bADC_EN;                                                        //ADCï¿½ï¿½Ô´Ê¹ï¿½ï¿½
  33   1      #if ADC_INTERRUPT
  34   1          ADC_IF = 0;                                                                //ï¿½ï¿½ï¿½ï¿½Ð¶ï¿½
  35   1          IE_ADC = 1;                                                                //Ê¹ï¿½ï¿½ADCï¿½Ð¶ï¿½
  36   1      #endif
  37   1          ADC_ChannelSelect(3);
  38   1          ADC_START = 1;
  39   1      }
  40          
  41          /*******************************************************************************
  42          * Function Name  : ADC_ChannelSelect(UINT8 ch)
  43          * Description    : ADCï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
  44          * Input          : UINT8 ch ï¿½ï¿½ï¿½ï¿½Í¨ï¿½ï¿½
  45          * Output         : None
  46          * Return         : ï¿½É¹ï¿½ SUCCESS
  47                             Ê§ï¿½ï¿½ FAIL
  48          *******************************************************************************/
  49          UINT8 ADC_ChannelSelect(UINT8 ch)
  50          {
  51   1          if(ch == 0){ADC_CHAN1 =0;ADC_CHAN0=0;P1_DIR_PU &= ~bAIN0;}                 //AIN0
  52   1          else if(ch == 1){ADC_CHAN1 =0;ADC_CHAN0=1;P1_DIR_PU &= ~bAIN1;}            //AIN1
C51 COMPILER V9.01   ADC                                                                   05/11/2021 15:11:42 PAGE 2   

  53   1          else if(ch == 2){ADC_CHAN1 =1;ADC_CHAN0=0;P1_DIR_PU &= ~bAIN2;}            //AIN2
  54   1          else if(ch == 3){ADC_CHAN1 =1;ADC_CHAN0=1;P3_DIR_PU &= ~bAIN3;}            //AIN3
  55   1          else return FAIL;
  56   1          return SUCCESS;
  57   1      }
  58          
  59          /*******************************************************************************
  60          * Function Name  : VoltageCMPModeInit()
  61          * Description    : ï¿½ï¿½Ñ¹ï¿½È½ï¿½ï¿½ï¿½Ä£Ê½ï¿½ï¿½Ê¼ï¿½ï¿½
  62          * Input          : UINT8 fo ï¿½ï¿½ï¿½ï¿½Ë¿ï¿½ 0\1\2\3
  63                             UINT8 re ï¿½ï¿½ï¿½ï¿½Ë¿ï¿½ 1\3
  64          * Output         : None
  65          * Return         : ï¿½É¹ï¿½ SUCCESS
  66                             Ê§ï¿½ï¿½ FAIL
  67          *******************************************************************************/
  68          UINT8 VoltageCMPModeInit(UINT8 fo,UINT8 re)
  69          {
  70   1          ADC_CFG |= bCMP_EN;                                                        //ï¿½ï¿½Æ½ï¿½È½Ïµï¿½Ô´Ê¹ï¿½
             -ï¿½
  71   1          if(re == 1){
  72   2            if(fo == 0) {ADC_CHAN1 =0;ADC_CHAN0=0;CMP_CHAN =0;}                      //AIN0ï¿½ï¿½AIN1
  73   2            else if(fo == 2) {ADC_CHAN1 =1;ADC_CHAN0=0;CMP_CHAN =0;}                 //AIN2ï¿½ï¿½AIN1
  74   2            else if(fo == 3) {ADC_CHAN1 =1;ADC_CHAN0=1;CMP_CHAN =0; }                //AIN3ï¿½ï¿½AIN1     
  75   2            else return FAIL;
  76   2          }          
  77   1          else if(re == 3){
  78   2            if(fo == 0) {ADC_CHAN1 =0;ADC_CHAN0=0;CMP_CHAN =0;}                      //AIN0ï¿½ï¿½AIN1
  79   2            else if(fo == 1) {ADC_CHAN1 =0;ADC_CHAN0=1;CMP_CHAN =0;}                 //AIN1ï¿½ï¿½AIN1
  80   2            else if(fo == 2) {ADC_CHAN1 =1;ADC_CHAN0=0;CMP_CHAN =0;}                 //AIN2ï¿½ï¿½AIN1     
  81   2            else return FAIL;
  82   2          }
  83   1          else return FAIL;
  84   1      #if ADC_INTERRUPT
  85   1          CMP_IF = 0;                                                                //ï¿½ï¿½ï¿½ï¿½Ð¶ï¿½
  86   1          IE_ADC = 1;                                                                //Ê¹ï¿½ï¿½ADCï¿½Ð¶ï¿½
  87   1      #endif
  88   1      
  89   1           return SUCCESS;
  90   1      }
  91          
  92          #if ADC_INTERRUPT
  93          /*******************************************************************************
  94          * Function Name  : ADCInterrupt(void)
  95          * Description    : ADC ï¿½Ð¶Ï·ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
  96          *******************************************************************************/
  97          void  ADCInterrupt( void ) interrupt INT_NO_ADC using 1                       //ADCï¿½Ð¶Ï·ï¿½ï¿½ï¿½ï¿½ï¿½ï¿
             -½,Ê¹ï¿½Ã¼Ä´ï¿½ï¿½ï¿½ï¿½ï¿½1
  98          { 
  99   1          if(ADC_IF ==  1)                                                          //ADCï¿½ï¿½ï¿½ï¿½Ð¶ï¿½
 100   1          { 
 101   2            AdcData = ADC_DATA;                                                    //È¡ï¿½ï¿½ADCï¿½ï¿½ï¿½ï¿½ï¿½ï
             -¿½ï¿½ï¿½
 102   2            ADC_IF = 0;                                                             //ï¿½ï¿½ï¿½ADCï¿½Ð¶Ï±ï¿½Ö¾
 103   2      //    printf(" %d ",UserData);
 104   2          }
 105   1          if(CMP_IF ==  1)                                                          //ï¿½ï¿½Ñ¹ï¿½È½ï¿½ï¿½ï¿½ï¿½ï
             -¿½Ð¶ï¿½
 106   1          { 
 107   2      //       UserData = ADC_CTRL&0x80 >> 7);                                          //ï¿½ï¿½ï¿½ï¿½È½ï¿½ï¿½ï¿½
             -ï¿½ï¿½ï¿½    
 108   2            CMP_IF = 0;                                                             //ï¿½ï¿½Õ±È½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿
             -½ï¿½Ð¶ï¿½
C51 COMPILER V9.01   ADC                                                                   05/11/2021 15:11:42 PAGE 3   

 109   2          }
 110   1      }
 111          #endif
 112          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    211    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      2       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
