C51 COMPILER V9.01   U8X8_DISPLAY                                                          04/30/2021 10:55:34 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE U8X8_DISPLAY
OBJECT MODULE PLACED IN .\Objects\u8x8_display.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE ..\u8g2\csrc\u8x8_display.c LARGE WARNINGLEVEL(1) OPTIMIZE(8,SPEED) BROW
                    -SE INCDIR(..\USER;..\SYS;..\BSP\BSP_485;..\BSP\BSP_ADC;..\BSP\BSP_KEY;..\BSP\BSP_OLED_IIC;..\APP) DEBUG OBJECTEXTEND PRI
                    -NT(.\Listings\u8x8_display.lst) TABS(2) OBJECT(.\Objects\u8x8_display.obj)

line level    source

   1          /*
   2            
   3            u8x8_display.c
   4            
   5            Universal 8bit Graphics Library (https://github.com/olikraus/u8g2/)
   6          
   7            Copyright (c) 2016, olikraus@gmail.com
   8            All rights reserved.
   9          
  10            Redistribution and use in source and binary forms, with or without modification, 
  11            are permitted provided that the following conditions are met:
  12          
  13            * Redistributions of source code must retain the above copyright notice, this list 
  14              of conditions and the following disclaimer.
  15              
  16            * Redistributions in binary form must reproduce the above copyright notice, this 
  17              list of conditions and the following disclaimer in the documentation and/or other 
  18              materials provided with the distribution.
  19          
  20            THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
  21            CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
  22            INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
  23            MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
  24            DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
  25            CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
  26            SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
  27            NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
  28            LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
  29            CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
  30            STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
  31            ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
  32            ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  
  33            
  34            
  35            Abstraction layer for the graphics controller.
  36            Main goal is the placement of a 8x8 pixel block (tile) on the display.
  37            
  38          */
  39          
  40          
  41          #include "u8x8.h"
*** ERROR C141 IN LINE 600 OF ..\U8G2\CSRC\U8X8.H: syntax error near ')'
*** ERROR C141 IN LINE 632 OF ..\U8G2\CSRC\U8X8.H: syntax error near ')'
*** ERROR C141 IN LINE 663 OF ..\U8G2\CSRC\U8X8.H: syntax error near ')'
  42          
  43          
  44          /*==========================================*/
  45          /* internal library function */
  46          
  47          /*
  48            this is a helper function for the U8X8_MSG_DISPLAY_SETUP_MEMORY function.
  49            It can be called within the display callback function to carry out the usual standard tasks.
  50            
C51 COMPILER V9.01   U8X8_DISPLAY                                                          04/30/2021 10:55:34 PAGE 2   

  51          */
  52          void u8x8_d_helper_display_setup_memory(u8x8_t *u8x8, const u8x8_display_info_t *display_info)
  53          {
  54   1            /* 1) set display info struct */
  55   1            u8x8->display_info = display_info;
  56   1            u8x8->x_offset = u8x8->display_info->default_x_offset;
  57   1      }
  58          
  59          /*
  60            this is a helper function for the U8X8_MSG_DISPLAY_INIT function.
  61            It can be called within the display callback function to carry out the usual standard tasks.
  62            
  63          */
  64          void u8x8_d_helper_display_init(u8x8_t *u8x8)
  65          {
  66   1            /* 2) apply port directions to the GPIO lines and apply default values for the IO lines*/
  67   1            u8x8_gpio_Init(u8x8);
*** ERROR C212 IN LINE 67 OF ..\U8G2\CSRC\U8X8_DISPLAY.C: indirect call: parameters do not fit within registers
  68   1            u8x8_cad_Init(u8x8);
*** ERROR C212 IN LINE 68 OF ..\U8G2\CSRC\U8X8_DISPLAY.C: indirect call: parameters do not fit within registers
  69   1      
  70   1            /* 3) do reset */
  71   1            u8x8_gpio_SetReset(u8x8, 1);
  72   1            u8x8_gpio_Delay(u8x8, U8X8_MSG_DELAY_MILLI, u8x8->display_info->reset_pulse_width_ms);
  73   1            u8x8_gpio_SetReset(u8x8, 0);
  74   1            u8x8_gpio_Delay(u8x8, U8X8_MSG_DELAY_MILLI, u8x8->display_info->reset_pulse_width_ms);
  75   1            u8x8_gpio_SetReset(u8x8, 1);
  76   1            u8x8_gpio_Delay(u8x8, U8X8_MSG_DELAY_MILLI, u8x8->display_info->post_reset_wait_ms);
  77   1      }    
  78          
  79          /*==========================================*/
  80          /* official functions */
  81          
  82          uint8_t u8x8_DrawTile(u8x8_t *u8x8, uint8_t x, uint8_t y, uint8_t cnt, uint8_t *tile_ptr)
  83          {
  84   1        u8x8_tile_t tile;
  85   1        tile.x_pos = x;
  86   1        tile.y_pos = y;
  87   1        tile.cnt = cnt;
  88   1        tile.tile_ptr = tile_ptr;
  89   1        return u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_DRAW_TILE, 1, (void *)&tile);
*** ERROR C212 IN LINE 89 OF ..\U8G2\CSRC\U8X8_DISPLAY.C: indirect call: parameters do not fit within registers
  90   1      }
  91          
  92          /* should be implemented as macro */
  93          void u8x8_SetupMemory(u8x8_t *u8x8)
  94          {
  95   1        u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_SETUP_MEMORY, 0, NULL);  
*** ERROR C212 IN LINE 95 OF ..\U8G2\CSRC\U8X8_DISPLAY.C: indirect call: parameters do not fit within registers
  96   1      }
  97          
  98          void u8x8_InitDisplay(u8x8_t *u8x8)
  99          {
 100   1        u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_INIT, 0, NULL);  
*** ERROR C212 IN LINE 100 OF ..\U8G2\CSRC\U8X8_DISPLAY.C: indirect call: parameters do not fit within registers
 101   1      }
 102          
 103          void u8x8_SetPowerSave(u8x8_t *u8x8, uint8_t is_enable)
 104          {
 105   1        u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_SET_POWER_SAVE, is_enable, NULL);  
*** ERROR C212 IN LINE 105 OF ..\U8G2\CSRC\U8X8_DISPLAY.C: indirect call: parameters do not fit within registers
 106   1      }
C51 COMPILER V9.01   U8X8_DISPLAY                                                          04/30/2021 10:55:34 PAGE 3   

 107          
 108          void u8x8_SetFlipMode(u8x8_t *u8x8, uint8_t mode)
 109          {
 110   1        u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_SET_FLIP_MODE, mode, NULL);  
*** ERROR C212 IN LINE 110 OF ..\U8G2\CSRC\U8X8_DISPLAY.C: indirect call: parameters do not fit within registers
 111   1      }
 112          
 113          void u8x8_SetContrast(u8x8_t *u8x8, uint8_t value)
 114          {
 115   1        u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_SET_CONTRAST, value, NULL);  
*** ERROR C212 IN LINE 115 OF ..\U8G2\CSRC\U8X8_DISPLAY.C: indirect call: parameters do not fit within registers
 116   1      }
 117          
 118          void u8x8_RefreshDisplay(u8x8_t *u8x8)
 119          {
 120   1        u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_REFRESH, 0, NULL);  
*** ERROR C212 IN LINE 120 OF ..\U8G2\CSRC\U8X8_DISPLAY.C: indirect call: parameters do not fit within registers
 121   1      }
 122          
 123          void u8x8_ClearDisplayWithTile(u8x8_t *u8x8, const uint8_t *buf)
 124          {
 125   1        u8x8_tile_t tile;
 126   1        uint8_t h;
 127   1      
 128   1        tile.x_pos = 0;
 129   1        tile.cnt = 1;
 130   1        tile.tile_ptr = (uint8_t *)buf;   /* tile_ptr should be const, but isn't */
 131   1        
 132   1        h = u8x8->display_info->tile_height;
 133   1        tile.y_pos = 0;
 134   1        do
 135   1        {
 136   2          u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_DRAW_TILE, u8x8->display_info->tile_width, (void *)&tile);
*** ERROR C212 IN LINE 136 OF ..\U8G2\CSRC\U8X8_DISPLAY.C: indirect call: parameters do not fit within registers
 137   2          tile.y_pos++;
 138   2        } while( tile.y_pos < h );
 139   1      }
 140          
 141          void u8x8_ClearDisplay(u8x8_t *u8x8)
 142          {
 143   1        uint8_t buf[8] = { 0, 0, 0, 0, 0, 0, 0, 0 };
 144   1        u8x8_ClearDisplayWithTile(u8x8, buf);
 145   1      }
 146          
 147          void u8x8_FillDisplay(u8x8_t *u8x8)
 148          {
 149   1        uint8_t buf[8] = { 255, 255, 255, 255, 255, 255, 255, 255 };
 150   1        u8x8_ClearDisplayWithTile(u8x8, buf);
 151   1      }
 152          
 153          void u8x8_ClearLine(u8x8_t *u8x8, uint8_t line)
 154          {
 155   1        uint8_t buf[8] = { 0, 0, 0, 0, 0, 0, 0, 0 };
 156   1        u8x8_tile_t tile;
 157   1        if ( line < u8x8->display_info->tile_height )
 158   1        {
 159   2          tile.x_pos = 0;
 160   2          tile.y_pos = line;
 161   2          tile.cnt = 1;
 162   2          tile.tile_ptr = (uint8_t *)buf;   /* tile_ptr should be const, but isn't */
 163   2          u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_DRAW_TILE, u8x8->display_info->tile_width, (void *)&tile);
*** ERROR C212 IN LINE 163 OF ..\U8G2\CSRC\U8X8_DISPLAY.C: indirect call: parameters do not fit within registers
C51 COMPILER V9.01   U8X8_DISPLAY                                                          04/30/2021 10:55:34 PAGE 4   

 164   2        }  
 165   1      }

C51 COMPILATION COMPLETE.  0 WARNING(S),  14 ERROR(S)
