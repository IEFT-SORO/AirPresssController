C51 COMPILER V9.01   SCREENCOMPONENT                                                       05/11/2021 15:48:58 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE SCREENCOMPONENT
OBJECT MODULE PLACED IN .\Objects\ScreenComponent.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE ..\APP\ScreenComponent.c LARGE WARNINGLEVEL(1) OPTIMIZE(8,SPEED) BROWSE 
                    -INCDIR(..\USER;..\SYS;..\BSP\BSP_485;..\BSP\BSP_ADC;..\BSP\BSP_KEY;..\BSP\BSP_OLED_IIC;..\APP;..\BSP\BSP_IO) DEBUG OBJEC
                    -TEXTEND PRINT(.\Listings\ScreenComponent.lst) TABS(2) OBJECT(.\Objects\ScreenComponent.obj)

line level    source

   1          /*
   2           * @Author: your name
   3           * @Date: 2021-04-30 09:38:30
   4           * @LastEditTime: 2021-05-11 15:07:09
   5           * @LastEditors: Please set LastEditors
   6           * @Description: In User Settings Edit
   7           * @FilePath: \AirPressControl\APP\ScreenComponent.c
   8           */
   9          #include <OLED_IIC.h>
  10          #include "Debug.H"
  11          #include "ScreenComponent.h"
  12          #include "KEY.H"
  13          #include "ADC.H"
  14          #include "UART_485.H"
  15          
  16          UINT8 PressValGet()
  17          {
  18   1        static UINT8 press;
  19   1        if(!ADC_START);//TODO add Filter
  20   1        {
  21   2          press=ADC_DATA;
  22   2            
  23   2          ADC_START = 1;      
  24   2        }
  25   1        return press;
  26   1      }
  27          void StartScreen()
  28          {
  29   1        OLED_ShowCHinese(8,1,0);
  30   1        OLED_ShowCHinese(24,1,1);
  31   1        OLED_ShowCHinese(40,1,2); 
  32   1        OLED_ShowCHinese(56,1,3);
  33   1        OLED_ShowCHinese(72,1,4);
  34   1        OLED_ShowCHinese(88,1,5);
  35   1        OLED_ShowCHinese(104,1,6);
  36   1        OLED_Clear();
  37   1      }
  38          
  39          enum  SCREENID screen_id;
  40          UINT8 CurPos=0;
  41          UINT8 deviceID=0;
  42          enum MODE temp_mode;
  43          int press;
  44          
  45          void MainScreen(enum MODE mode)
  46          {
  47   1          OLED_ShowCHinese(8,0,0);
  48   1          OLED_ShowCHinese(24,0,1);
  49   1          OLED_ShowCHinese(40,0,2);
  50   1          OLED_ShowCHinese(56,0,3);
  51   1          OLED_ShowCHinese(72,0,4);
  52   1          OLED_ShowCHinese(88,0,5);
  53   1          OLED_ShowCHinese(104,0,6);
C51 COMPILER V9.01   SCREENCOMPONENT                                                       05/11/2021 15:48:58 PAGE 2   

  54   1          switch(mode)
  55   1            {
  56   2            case POSITIVEPRESS:
  57   2            OLED_ShowCHinese(17,4,23);
  58   2            OLED_ShowCHinese(33,4,12);
  59   2            OLED_ShowString(49,4,":",16);
  60   2            press= PressValGet()-70;
  61   2            if(press<0)press=0;
  62   2            OLED_ShowString(90,4,"kpa",16);
  63   2            OLED_ShowString(65,4,"   ",16);
  64   2            OLED_ShowIntegerNumber(65,4,press,16);
  65   2            break;
  66   2            case NEGTIVEPRESS:
  67   2            OLED_ShowCHinese(17,4,24);
  68   2            OLED_ShowCHinese(33,4,12);
  69   2            OLED_ShowString(49,4,":",16);
  70   2            OLED_ShowString(90,4,"kpa",16);
  71   2            OLED_ShowString(65,4,"   ",16);
  72   2            press= PressValGet()-55;
  73   2            OLED_ShowIntegerNumber(65,4,press,16);
  74   2            break;
  75   2            case CLOSE:
  76   2            OLED_ShowCHinese(17,4,15);
  77   2            OLED_ShowCHinese(33,4,16);
  78   2            OLED_ShowString(49,4,":",16);
  79   2            OLED_ShowString(90,4,"kpa",16);
  80   2            OLED_ShowString(65,4,"   ",16);
  81   2            press= PressValGet()-27;
  82   2            OLED_ShowIntegerNumber(65,4,press,16);
  83   2            break;
  84   2            }
  85   1      }
  86          void MenueScreen()
  87          {
  88   1        OLED_ShowCHinese(8,0,0);
  89   1        OLED_ShowCHinese(24,0,1);
  90   1        OLED_ShowCHinese(40,0,2);
  91   1        OLED_ShowCHinese(56,0,3);
  92   1        OLED_ShowCHinese(72,0,4);
  93   1        OLED_ShowCHinese(88,0,5);
  94   1        OLED_ShowCHinese(104,0,6);
  95   1      switch(CurPos)
  96   1        {
  97   2        case 0:
  98   2        OLED_RevShowCHinese(32,2,17);
  99   2        OLED_RevShowCHinese(48,2,18);
 100   2        OLED_RevShowCHinese(64,2,21);
 101   2        OLED_RevShowCHinese(80,2,22);
 102   2      
 103   2        OLED_ShowCHinese(48,4,19);
 104   2        OLED_ShowCHinese(64,4,20);
 105   2        break;
 106   2        case 1:
 107   2        OLED_ShowCHinese(32,2,17);
 108   2        OLED_ShowCHinese(48,2,18);
 109   2        OLED_ShowCHinese(64,2,21);
 110   2        OLED_ShowCHinese(80,2,22);
 111   2      
 112   2        OLED_RevShowCHinese(48,4,19);
 113   2        OLED_RevShowCHinese(64,4,20);
 114   2        break;
 115   2        }
C51 COMPILER V9.01   SCREENCOMPONENT                                                       05/11/2021 15:48:58 PAGE 3   

 116   1      
 117   1        OLED_ShowCHinese(8,6,9);
 118   1        OLED_ShowCHinese(24,6,10);
 119   1      
 120   1        OLED_ShowCHinese(88,6,7);
 121   1        OLED_ShowCHinese(104,6,8);
 122   1      
 123   1      }
 124          void DeviceNumScreen()
 125          {
 126   1        OLED_ShowCHinese(8,0,0);
 127   1        OLED_ShowCHinese(24,0,1);
 128   1        OLED_ShowCHinese(40,0,2);
 129   1        OLED_ShowCHinese(56,0,3);
 130   1        OLED_ShowCHinese(72,0,4);
 131   1        OLED_ShowCHinese(88,0,5);
 132   1        OLED_ShowCHinese(104,0,6);
 133   1      
 134   1        OLED_ShowCHinese(32,3,17);
 135   1        OLED_ShowCHinese(48,3,18);
 136   1        OLED_ShowCHinese(64,3,21);
 137   1        OLED_ShowCHinese(80,3,22);
 138   1      
 139   1        OLED_ShowString(96,3,":",16);
 140   1        
 141   1        OLED_ShowIntegerNumber(104,3,deviceID,16);
 142   1      
 143   1        OLED_ShowCHinese(8,6,9);
 144   1        OLED_ShowCHinese(24,6,10);
 145   1      }
 146          
 147          
 148          enum MODE keytask(enum SCREENID id)//TODO 
 149          {
 150   1      switch(id)
 151   1        {
 152   2          case MAIN:
 153   2            MainScreen(temp_mode);
 154   2            if(GetKeyStation(KEY3)==0)
 155   2            {
 156   3              PositivepressMode();
*** WARNING C206 IN LINE 156 OF ..\APP\SCREENCOMPONENT.C: 'PositivepressMode': missing function-prototype
 157   3              temp_mode=POSITIVEPRESS;
 158   3            }
 159   2            if(GetKeyStation(KEY1)==0)
 160   2            {
 161   3              NegtivepressMode();
*** WARNING C206 IN LINE 161 OF ..\APP\SCREENCOMPONENT.C: 'NegtivepressMode': missing function-prototype
 162   3              temp_mode=NEGTIVEPRESS;
 163   3            }
 164   2            if(GetKeyStation(KEY2)==0)
 165   2            {
 166   3              SilenceMode();
*** WARNING C206 IN LINE 166 OF ..\APP\SCREENCOMPONENT.C: 'SilenceMode': missing function-prototype
 167   3              temp_mode=CLOSE;
 168   3            }
 169   2            if( KeyPressLong(KEY2)==1)
 170   2            {
 171   3              screen_id=1;
 172   3              OLED_Clear();
 173   3            }
 174   2          break;
C51 COMPILER V9.01   SCREENCOMPONENT                                                       05/11/2021 15:48:58 PAGE 4   

 175   2            return temp_mode;
 176   2          case MENU:
 177   2            
 178   2            MenueScreen();
 179   2            if(GetKeyStation(KEY3)==0)
 180   2            {
 181   3              CurPos++;
 182   3              if(CurPos>2)
 183   3              {
 184   4                CurPos=0;
 185   4              }
 186   3            }
 187   2            if(GetKeyStation(KEY1)==0)
 188   2            {
 189   3              screen_id=2;
 190   3              OLED_Clear();
 191   3            }
 192   2            if(GetKeyStation(KEY2)==0)
 193   2            {
 194   3              CurPos=0;
 195   3              screen_id=0;
 196   3              OLED_Clear();
 197   3            }
 198   2          break;
 199   2          case NUMID:
 200   2            DeviceNumScreen();
 201   2            if(GetKeyStation(KEY1)==0)
 202   2            {
 203   3              deviceID--;
 204   3            }
 205   2            if(GetKeyStation(KEY3)==0)
 206   2            {
 207   3              deviceID++;
 208   3            }
 209   2            if(deviceID>16)
 210   2            {
 211   3              deviceID=0;
 212   3            }
 213   2            if(GetKeyStation(KEY2)==0)
 214   2            {
 215   3              CurPos=0;
 216   3              screen_id=1;
 217   3              OLED_Clear();
 218   3            }
 219   2          break;
 220   2          case ABOUT:
 221   2          if(GetKeyStation(KEY1)==0)
 222   2            {
 223   3            }
 224   2            if(GetKeyStation(KEY3)==0)
 225   2            {
 226   3            }
 227   2            if(deviceID>20)
 228   2            {
 229   3            }
 230   2            if(GetKeyStation(KEY2)==0)
 231   2            {
 232   3              OLED_Clear();
 233   3            }
 234   2          break;
 235   2        }
 236   1      }
C51 COMPILER V9.01   SCREENCOMPONENT                                                       05/11/2021 15:48:58 PAGE 5   

 237          
 238          void TaskInit()
 239          {
 240   1      
 241   1        OLED_Init();  
 242   1        OLED_Clear();  
 243   1        KeyInit();
 244   1        ValvePumpInit(); 
*** WARNING C206 IN LINE 244 OF ..\APP\SCREENCOMPONENT.C: 'ValvePumpInit': missing function-prototype
 245   1        ADCInit( 1 );  
 246   1        mInitSTDIO( );
 247   1        screen_id=MAIN;
 248   1        deviceID=0;
 249   1        temp_mode=CLOSE;
 250   1      }
 251          
 252          void CtrlRun(UINT8 cmd)
 253          {
 254   1        switch (cmd)
 255   1        {
 256   2          case 0x01:
 257   2          PositivepressMode();
 258   2          temp_mode=POSITIVEPRESS;
 259   2          break;
 260   2          case 0x02:
 261   2          NegtivepressMode();
 262   2          temp_mode=NEGTIVEPRESS;
 263   2          break;
 264   2          case 0x03:
 265   2          SilenceMode();
 266   2          temp_mode=CLOSE;
 267   2          break;
 268   2        }
 269   1      }
 270          
 271          void TaskRun()
 272          {
 273   1        UINT8 cmd=0;
 274   1        keytask(screen_id);
 275   1        if(MsgAnalyze(deviceID))
 276   1        {
 277   2          cmd=MsgAnalyze(deviceID);
 278   2          CtrlRun(cmd);
 279   2          MsgClear();
 280   2        }
 281   1      }
 282          
 283          
 284          
 285          
 286          
*** WARNING C290 IN LINE 236 OF ..\APP\SCREENCOMPONENT.C: missing return value


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1225    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =      7       2
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
C51 COMPILER V9.01   SCREENCOMPONENT                                                       05/11/2021 15:48:58 PAGE 6   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  5 WARNING(S),  0 ERROR(S)
