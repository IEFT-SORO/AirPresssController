C51 COMPILER V9.01   SCREENCOMPONENT                                                       08/31/2021 11:22:05 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE SCREENCOMPONENT
OBJECT MODULE PLACED IN .\Objects\ScreenComponent.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE ..\APP\ScreenComponent.c LARGE WARNINGLEVEL(1) OPTIMIZE(8,SPEED) BROWSE 
                    -INCDIR(..\USER;..\SYS;..\BSP\BSP_485;..\BSP\BSP_ADC;..\BSP\BSP_KEY;..\BSP\BSP_OLED_IIC;..\APP;..\BSP\BSP_IO) DEBUG OBJEC
                    -TEXTEND PRINT(.\Listings\ScreenComponent.lst) TABS(2) OBJECT(.\Objects\ScreenComponent.obj)

line level    source

   1          /*
   2           * @Author: your name
   3           * @Date: 2021-04-30 09:38:30
   4           * @LastEditTime: 2021-05-14 12:01:19
   5           * @LastEditors: Please set LastEditors
   6           * @Description: In User Settings Edit
   7           * @FilePath: \AirPressControl\APP\ScreenComponent.c
   8           */
   9          #include <OLED_IIC.h>
  10          #include "Debug.H"
  11          #include "ScreenComponent.h"
  12          #include "KEY.H"
  13          #include "ADC.H"
  14          #include "UART_485.H"
  15          
  16          
  17          void StartScreen()
  18          {
  19   1        OLED_ShowCHinese(8,1,0);
  20   1        OLED_ShowCHinese(24,1,1);
  21   1        OLED_ShowCHinese(40,1,2); 
  22   1        OLED_ShowCHinese(56,1,3);
  23   1        OLED_ShowCHinese(72,1,4);
  24   1        OLED_ShowCHinese(88,1,5);
  25   1        OLED_ShowCHinese(104,1,6);
  26   1        OLED_Clear();
  27   1      }
  28          
  29          enum  SCREENID screen_id;
  30          UINT8 CurPos=0;
  31          UINT8 deviceID=0;
  32          enum MODE temp_mode;
  33          int press;
  34          
  35          void MainScreen(enum MODE mode)
  36          {
  37   1          OLED_ShowCHinese(8,0,0);
  38   1          OLED_ShowCHinese(24,0,1);
  39   1          OLED_ShowCHinese(40,0,2);
  40   1          OLED_ShowCHinese(56,0,3);
  41   1          OLED_ShowCHinese(72,0,4);
  42   1          OLED_ShowCHinese(88,0,5);
  43   1          OLED_ShowCHinese(104,0,6);
  44   1          switch(mode)
  45   1            {
  46   2            case POSITIVEPRESS:
  47   2            OLED_ShowCHinese(17,4,23);
  48   2            OLED_ShowCHinese(33,4,12);
  49   2            OLED_ShowString(49,4,":",16);
  50   2            press= FilterPress()-PRESSZERO;//TODO ADD calibration
  51   2            if(press<0)press=0;
  52   2            OLED_ShowString(90,4,"kpa",16);
  53   2            OLED_ShowString(65,4,"   ",16);
C51 COMPILER V9.01   SCREENCOMPONENT                                                       08/31/2021 11:22:05 PAGE 2   

  54   2            OLED_ShowIntegerNumber(65,4,press,16);
  55   2            break;
  56   2            case NEGTIVEPRESS:
  57   2            OLED_ShowCHinese(17,4,24);
  58   2            OLED_ShowCHinese(33,4,12);
  59   2            OLED_ShowString(49,4,":",16);
  60   2            press= FilterPress()-PRESSZERO;//TODO ADD calibration
  61   2            OLED_ShowString(90,4,"kpa",16);
  62   2            OLED_ShowString(65,4,"   ",16);
  63   2            OLED_ShowIntegerNumber(65,4,press,16);
  64   2            break;
  65   2            case CLOSE:
  66   2            OLED_ShowCHinese(17,4,15);
  67   2            OLED_ShowCHinese(33,4,16);
  68   2            OLED_ShowString(49,4,":",16);
  69   2            press= FilterPress()-PRESSZERO;//TODO ADD calibration
  70   2            OLED_ShowString(90,4,"kpa",16);
  71   2            OLED_ShowString(65,4,"   ",16);
  72   2            OLED_ShowIntegerNumber(65,4,press,16);
  73   2            break;
  74   2            }
  75   1      }
  76          void MenueScreen()
  77          {
  78   1        OLED_ShowCHinese(8,0,0);
  79   1        OLED_ShowCHinese(24,0,1);
  80   1        OLED_ShowCHinese(40,0,2);
  81   1        OLED_ShowCHinese(56,0,3);
  82   1        OLED_ShowCHinese(72,0,4);
  83   1        OLED_ShowCHinese(88,0,5);
  84   1        OLED_ShowCHinese(104,0,6);
  85   1      switch(CurPos)
  86   1        {
  87   2        case 0:
  88   2        OLED_RevShowCHinese(32,2,17);
  89   2        OLED_RevShowCHinese(48,2,18);
  90   2        OLED_RevShowCHinese(64,2,21);
  91   2        OLED_RevShowCHinese(80,2,22);
  92   2      
  93   2        OLED_ShowCHinese(48,4,19);
  94   2        OLED_ShowCHinese(64,4,20);
  95   2        break;
  96   2        case 1:
  97   2        OLED_ShowCHinese(32,2,17);
  98   2        OLED_ShowCHinese(48,2,18);
  99   2        OLED_ShowCHinese(64,2,21);
 100   2        OLED_ShowCHinese(80,2,22);
 101   2      
 102   2        OLED_RevShowCHinese(48,4,19);
 103   2        OLED_RevShowCHinese(64,4,20);
 104   2        break;
 105   2        }
 106   1      
 107   1        OLED_ShowCHinese(8,6,9);
 108   1        OLED_ShowCHinese(24,6,10);
 109   1      
 110   1        OLED_ShowCHinese(88,6,7);
 111   1        OLED_ShowCHinese(104,6,8);
 112   1      
 113   1      }
 114          void DeviceNumScreen()
 115          {
C51 COMPILER V9.01   SCREENCOMPONENT                                                       08/31/2021 11:22:05 PAGE 3   

 116   1        OLED_ShowCHinese(8,0,0);
 117   1        OLED_ShowCHinese(24,0,1);
 118   1        OLED_ShowCHinese(40,0,2);
 119   1        OLED_ShowCHinese(56,0,3);
 120   1        OLED_ShowCHinese(72,0,4);
 121   1        OLED_ShowCHinese(88,0,5);
 122   1        OLED_ShowCHinese(104,0,6);
 123   1      
 124   1        OLED_ShowCHinese(32,3,17);
 125   1        OLED_ShowCHinese(48,3,18);
 126   1        OLED_ShowCHinese(64,3,21);
 127   1        OLED_ShowCHinese(80,3,22);
 128   1      
 129   1        OLED_ShowString(96,3,":",16);
 130   1        OLED_ShowString(104,3,"   ",16);
 131   1        OLED_ShowIntegerNumber(104,3,deviceID,16);
 132   1      
 133   1        OLED_ShowCHinese(8,6,9);
 134   1        OLED_ShowCHinese(24,6,10);
 135   1      }
 136          
 137          
 138          enum MODE keytask(enum SCREENID id)//TODO fix key status
 139          {
 140   1      switch(id)
 141   1        {
 142   2          case MAIN:
 143   2            MainScreen(temp_mode);
 144   2            if(Button_Inquice_State(KEY2)==Button_Bit_Press)
 145   2            {
 146   3              PositivepressMode();
*** WARNING C206 IN LINE 146 OF ..\APP\SCREENCOMPONENT.C: 'PositivepressMode': missing function-prototype
 147   3              temp_mode=POSITIVEPRESS;
 148   3            }
 149   2            if(Button_Inquice_State(KEY3)==Button_Bit_Press)
 150   2            {
 151   3              NegtivepressMode();
*** WARNING C206 IN LINE 151 OF ..\APP\SCREENCOMPONENT.C: 'NegtivepressMode': missing function-prototype
 152   3              temp_mode=NEGTIVEPRESS;
 153   3            }
 154   2            if(Button_Inquice_State(KEY1)==Button_Bit_Press)
 155   2            {
 156   3              SilenceMode();
*** WARNING C206 IN LINE 156 OF ..\APP\SCREENCOMPONENT.C: 'SilenceMode': missing function-prototype
 157   3              temp_mode=CLOSE;
 158   3            }
 159   2            if( Button_Inquice_State(KEY1)==Button_Bit_Long)
 160   2            {
 161   3              screen_id=MENU;
 162   3              OLED_Clear();
 163   3            }
 164   2          break;
 165   2            return temp_mode;
 166   2          case MENU:
 167   2            
 168   2            MenueScreen();
 169   2            if(Button_Inquice_State(KEY3)==Button_Bit_Press)
 170   2            {
 171   3              CurPos++;
 172   3              if(CurPos>2)
 173   3              {
 174   4                CurPos=0;
C51 COMPILER V9.01   SCREENCOMPONENT                                                       08/31/2021 11:22:05 PAGE 4   

 175   4              }
 176   3            }
 177   2            if(Button_Inquice_State(KEY1)==Button_Bit_Press)
 178   2            {
 179   3              screen_id=NUMID;
 180   3              OLED_Clear();
 181   3            }
 182   2            if(Button_Inquice_State(KEY2)==Button_Bit_Press)
 183   2            {
 184   3              CurPos=0;
 185   3              screen_id=MAIN;
 186   3              OLED_Clear();
 187   3            }
 188   2          break;
 189   2          case NUMID:
 190   2            DeviceNumScreen();
 191   2            if(Button_Inquice_State(KEY1)==Button_Bit_Press)
 192   2            {
 193   3              deviceID--;
 194   3            if(deviceID<0)
 195   3            {
 196   4              deviceID=0;
 197   4            }
 198   3            }
 199   2            if(Button_Inquice_State(KEY3)==Button_Bit_Press)
 200   2            {
 201   3              deviceID++;
 202   3            }
 203   2            if(deviceID>16)
 204   2            {
 205   3              deviceID=0;
 206   3            }
 207   2            if(Button_Inquice_State(KEY2)==Button_Bit_Press)
 208   2            {
 209   3              CurPos=0;
 210   3              screen_id=MENU;
 211   3              OLED_Clear();
 212   3            }
 213   2          break;
 214   2          case ABOUT:
 215   2          if(Button_Inquice_State(KEY1)==Button_Bit_Press)
 216   2            {
 217   3            }
 218   2            if(Button_Inquice_State(KEY3)==Button_Bit_Press)
 219   2            {
 220   3            }
 221   2            if(Button_Inquice_State(KEY2)==Button_Bit_Press)
 222   2            {
 223   3              OLED_Clear();
 224   3            }
 225   2          break;
 226   2        }
 227   1      }
 228          
 229          void TaskInit()
 230          {
 231   1      
 232   1        OLED_Init();  
 233   1        OLED_Clear();  
 234   1        KeyInit();
 235   1        ValvePumpInit(); 
*** WARNING C206 IN LINE 235 OF ..\APP\SCREENCOMPONENT.C: 'ValvePumpInit': missing function-prototype
C51 COMPILER V9.01   SCREENCOMPONENT                                                       08/31/2021 11:22:05 PAGE 5   

 236   1        ADCInit( 1 );  
 237   1        mInitSTDIO( );
 238   1        screen_id=MAIN;
 239   1        deviceID=0;
 240   1        temp_mode=CLOSE;
 241   1      }
 242          
 243          void CtrlRun(UINT8 cmd)
 244          {
 245   1        switch (cmd)
 246   1        {
 247   2          case 0x01:
 248   2          PositivepressMode();
 249   2          temp_mode=POSITIVEPRESS;
 250   2          break;
 251   2          case 0x02:
 252   2          NegtivepressMode();
 253   2          temp_mode=NEGTIVEPRESS;
 254   2          break;
 255   2          case 0x03:
 256   2          SilenceMode();
 257   2          temp_mode=CLOSE;
 258   2          break;
 259   2        }
 260   1      }
 261          void Msgprcess()
 262          {
 263   1          UINT8 cmd=0;
 264   1        if(RI)
 265   1        {
 266   2          cmd=MsgAnalyze(deviceID);
 267   2          CtrlRun(cmd);
 268   2        }
 269   1        MsgClear();
 270   1      }
 271          void TaskRun()
 272          {
 273   1        keytask(screen_id);
 274   1        Msgprcess();
 275   1      }
 276          
 277          
 278          
 279          
 280          
*** WARNING C290 IN LINE 227 OF ..\APP\SCREENCOMPONENT.C: missing return value


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1191    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =      6       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  5 WARNING(S),  0 ERROR(S)
